<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="JPA 연결 테스트" tests="4" skipped="0" failures="0" errors="0" timestamp="2023-01-03T16:51:54" hostname="DESKTOP-L8QAT46" time="0.261">
  <properties/>
  <testcase name="select 테스트" classname="com.firstproject.projectboard.repository.JpaRepositoryTest" time="0.083"/>
  <testcase name="delete 테스트" classname="com.firstproject.projectboard.repository.JpaRepositoryTest" time="0.139"/>
  <testcase name="update 테스트" classname="com.firstproject.projectboard.repository.JpaRepositoryTest" time="0.021"/>
  <testcase name="insert 테스트" classname="com.firstproject.projectboard.repository.JpaRepositoryTest" time="0.014"/>
  <system-out><![CDATA[2023-01-04T01:51:54.483+09:00  INFO 11468 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.firstproject.projectboard.repository.JpaRepositoryTest]: JpaRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-01-04T01:51:54.493+09:00  INFO 11468 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.firstproject.projectboard.ProjectBoardApplication for test class com.firstproject.projectboard.repository.JpaRepositoryTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.1)

2023-01-04T01:51:54.512+09:00  INFO 11468 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : Starting JpaRepositoryTest using Java 17.0.5 with PID 11468 (started by 준성이 in C:\Users\준성이\Desktop\fastcampus\FirstProject\project-board)
2023-01-04T01:51:54.512+09:00 DEBUG 11468 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : Running with Spring Boot v3.0.1, Spring v6.0.3
2023-01-04T01:51:54.512+09:00  INFO 11468 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : No active profile set, falling back to 1 default profile: "default"
2023-01-04T01:51:54.563+09:00  INFO 11468 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-01-04T01:51:54.571+09:00  INFO 11468 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7 ms. Found 2 JPA repository interfaces.
2023-01-04T01:51:54.580+09:00  INFO 11468 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-01-04T01:51:54.593+09:00  INFO 11468 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:fe39cb36-98cf-4716-ad60-6314db26813d;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-01-04T01:51:54.769+09:00  INFO 11468 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-01-04T01:51:54.771+09:00  WARN 11468 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2023-01-04T01:51:54.781+09:00  INFO 11468 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table if exists article cascade 
Hibernate: 
    
    drop table if exists article_comment cascade 
Hibernate: 
    
    create table article (
       id bigint generated by default as identity,
        created_at timestamp(6) not null,
        created_by varchar(100) not null,
        modified_at timestamp(6) not null,
        modified_by varchar(100) not null,
        content varchar(10000) not null,
        hashtag varchar(255),
        title varchar(255) not null,
        primary key (id)
    )
Hibernate: 
    
    create table article_comment (
       id bigint generated by default as identity,
        created_at timestamp(6) not null,
        created_by varchar(100) not null,
        modified_at timestamp(6) not null,
        modified_by varchar(100) not null,
        content varchar(500) not null,
        article_id bigint not null,
        primary key (id)
    )
Hibernate: create index IDX571gx7oqo5xpmgocegaidlcu9 on article (title)
Hibernate: create index IDXai44fu6vaa28ebpydglnv7t3e on article (hashtag)
Hibernate: create index IDXrmt77yibijtk4sarremr67saa on article (created_at)
Hibernate: create index IDXdfntf947ntcr3x6vk7wlupxll on article (modified_at)
Hibernate: create index IDXpieqqnljv147sefofs56h25qx on article_comment (content)
Hibernate: create index IDXh1jx107qecntcbcpc2vfb07ij on article_comment (created_at)
Hibernate: create index IDXc6pa61djuf2o8xnceyyvtdbaq on article_comment (created_by)
Hibernate: 
    
    alter table if exists article_comment 
       add constraint FKghmocqkgqs5tkmucf5putw64t 
       foreign key (article_id) 
       references article
2023-01-04T01:51:54.854+09:00  INFO 11468 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-01-04T01:51:54.854+09:00  INFO 11468 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-01-04T01:51:54.929+09:00  INFO 11468 --- [    Test worker] c.f.p.repository.JpaRepositoryTest       : Started JpaRepositoryTest in 0.433 seconds (process running for 6.841)
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        count(*) 
    from
        article_comment a1_0
Hibernate: 
    select
        a1_0.article_id,
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.modified_at,
        a1_0.modified_by 
    from
        article_comment a1_0 
    where
        a1_0.article_id in(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?) 
    order by
        a1_0.id asc
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    select
        count(*) 
    from
        article_comment a1_0
Hibernate: 
    select
        a1_0.id,
        a1_0.content,
        a1_0.created_at,
        a1_0.created_by,
        a1_0.hashtag,
        a1_0.modified_at,
        a1_0.modified_by,
        a1_0.title 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    update
        article 
    set
        content=?,
        hashtag=?,
        modified_at=?,
        modified_by=?,
        title=? 
    where
        id=?
Hibernate: 
    select
        count(*) 
    from
        article a1_0
Hibernate: 
    insert 
    into
        article
        (id, content, created_at, created_by, hashtag, modified_at, modified_by, title) 
    values
        (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: 
    select
        count(*) 
    from
        article a1_0
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
